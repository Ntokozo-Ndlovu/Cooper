// <auto-generated />
using System;
using Cooper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cooper.Data.Migrations
{
    [DbContext(typeof(CooperDbContext))]
    [Migration("20240128105313_AddSeedDataForChallenge")]
    partial class AddSeedDataForChallenge
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cooper.Data.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Challenge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallengeGuid = new Guid("8bfc524f-4b71-48ec-9ec3-6cc883868890"),
                            Description = "Please take a good soccer photo",
                            EntityId = 9,
                            Name = "Best Soccer Picture"
                        },
                        new
                        {
                            Id = 2,
                            ChallengeGuid = new Guid("8b1be872-9111-4f33-8ec8-151c4956bb29"),
                            Description = "Please take a nice picture eating out",
                            EntityId = 10,
                            Name = "Best Steers Picture"
                        },
                        new
                        {
                            Id = 3,
                            ChallengeGuid = new Guid("a8dfc141-be2e-42f8-b3b1-a2c07900a12a"),
                            Description = "Please take a nice picture eating out",
                            EntityId = 11,
                            Name = "Best Sunday Chill Picture"
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 7
                        },
                        new
                        {
                            Id = 2,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 8
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UUID = new Guid("ded76e2c-b289-474c-a4dc-ca8f6f51259c")
                        },
                        new
                        {
                            Id = 2,
                            UUID = new Guid("8ed7c4a2-5084-4420-8ca3-58ee70148e00")
                        },
                        new
                        {
                            Id = 3,
                            UUID = new Guid("68fee093-91ec-4adb-80bc-ae7235771755")
                        },
                        new
                        {
                            Id = 4,
                            UUID = new Guid("7ea1a59a-b614-4f80-acc1-35b52f1bb75f")
                        },
                        new
                        {
                            Id = 5,
                            UUID = new Guid("b847994c-7014-4697-a0a5-ad85e9f759bf")
                        },
                        new
                        {
                            Id = 6,
                            UUID = new Guid("53bf182d-c6d8-4107-8ec2-01f2fc643f51")
                        },
                        new
                        {
                            Id = 7,
                            UUID = new Guid("f79b38a9-4322-4cc6-bf9c-c7d73f0c05fe")
                        },
                        new
                        {
                            Id = 8,
                            UUID = new Guid("df0c0e78-00ee-4aaf-a5ac-8d0975a92c73")
                        },
                        new
                        {
                            Id = 9,
                            UUID = new Guid("c195a501-6fe8-45bc-b652-48ffb9ad3cc8")
                        },
                        new
                        {
                            Id = 10,
                            UUID = new Guid("b8ad9df4-a79d-49e6-909b-06447e95142d")
                        },
                        new
                        {
                            Id = 11,
                            UUID = new Guid("ca042759-e697-49e1-aebb-e1701aad0577")
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entity = 1,
                            EntityId = 2,
                            Link = "https://imageio.forbes.com/specials-images/imageserve/5d35eacaf1176b0008974b54/2020-Chevrolet-Corvette-Stingray/0x0.jpg?format=jpg&crop=4560,2565,x790,y784,safe&width=960",
                            MediaGuid = new Guid("ed11b1a9-db69-4266-b6af-a557a246bc95"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 2,
                            Entity = 1,
                            EntityId = 3,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("aed5b676-9ed4-4ba0-985e-d2b612984c57"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 3,
                            Entity = 1,
                            EntityId = 4,
                            Link = "https://cdn.motor1.com/images/mgl/JO94P6/s1/most-expensive-cars-in-the-world.jpg",
                            MediaGuid = new Guid("061c429e-cf95-4229-9ccd-dd5284e39851"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 4,
                            Entity = 1,
                            EntityId = 5,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("234dabd7-a7bb-45a5-9228-a659f920abf3"),
                            MediaType = 0
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "School Post",
                            EntityId = 1,
                            Likes = 12,
                            Title = "Hello Wold"
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Username", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
