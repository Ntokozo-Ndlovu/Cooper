// <auto-generated />
using System;
using Cooper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cooper.Data.Migrations
{
    [DbContext(typeof(CooperDbContext))]
    [Migration("20240129063951_AddContactTableToDb")]
    partial class AddContactTableToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cooper.Data.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Challenge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallengeGuid = new Guid("162ff745-7807-4b06-8660-5c7cc89a392f"),
                            Description = "Please take a good soccer photo",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 9,
                            Name = "Best Soccer Picture",
                            Price = 11f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ChallengeGuid = new Guid("520a4d3a-e6ce-458c-8c72-360a5ffc92eb"),
                            Description = "Please take a nice picture eating out",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 10,
                            Name = "Best Steers Picture",
                            Price = 12f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ChallengeGuid = new Guid("a3bb21c7-9ea2-4c9b-9811-e3526856d05b"),
                            Description = "Please take a nice picture eating out",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 11,
                            Name = "Best Sunday Chill Picture",
                            Price = 13f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 7
                        },
                        new
                        {
                            Id = 2,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 8
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UUID = new Guid("37e20c2b-e8c9-4876-b846-c79cdc38f9c6")
                        },
                        new
                        {
                            Id = 12,
                            UUID = new Guid("5d1767ad-3245-4125-aaa0-d2c6114d9f07")
                        },
                        new
                        {
                            Id = 13,
                            UUID = new Guid("39232259-d315-45f9-936c-6c91da1294a4")
                        },
                        new
                        {
                            Id = 14,
                            UUID = new Guid("a66b8017-edaa-48c4-a185-8cb05b8857f3")
                        },
                        new
                        {
                            Id = 15,
                            UUID = new Guid("c7f664be-5e1a-4154-9c14-f58f3dd6ae49")
                        },
                        new
                        {
                            Id = 2,
                            UUID = new Guid("d496fe83-abd9-4e17-baff-53da16d0fb6f")
                        },
                        new
                        {
                            Id = 3,
                            UUID = new Guid("93ef4a87-41c3-4f9a-b0bb-8815d7a6a64b")
                        },
                        new
                        {
                            Id = 4,
                            UUID = new Guid("de3dca09-50ae-4220-ba89-2263430c43d2")
                        },
                        new
                        {
                            Id = 5,
                            UUID = new Guid("e34eef3e-48d9-494c-99c8-390f47cb38a1")
                        },
                        new
                        {
                            Id = 6,
                            UUID = new Guid("ec2e7b3e-f7c4-49c5-b84c-2cba38918f88")
                        },
                        new
                        {
                            Id = 16,
                            UUID = new Guid("f03ba457-bdce-4d48-86b6-7141e083a756")
                        },
                        new
                        {
                            Id = 17,
                            UUID = new Guid("63b73088-a9c0-4845-81d4-b13535b1888a")
                        },
                        new
                        {
                            Id = 18,
                            UUID = new Guid("42e5ad0d-865c-4c05-8a39-5569689e767a")
                        },
                        new
                        {
                            Id = 19,
                            UUID = new Guid("a4234f8c-569c-43c6-9d9a-bf48b42450e0")
                        },
                        new
                        {
                            Id = 7,
                            UUID = new Guid("8d573e16-db45-4750-954c-3c4146457eff")
                        },
                        new
                        {
                            Id = 8,
                            UUID = new Guid("d9ac9bda-d772-48d3-8e5b-e051aec8c48b")
                        },
                        new
                        {
                            Id = 9,
                            UUID = new Guid("1e7cfb9d-f985-4e58-aa54-fb8605dc25a3")
                        },
                        new
                        {
                            Id = 10,
                            UUID = new Guid("e14705dc-198c-4b73-aecd-04d91865d951")
                        },
                        new
                        {
                            Id = 11,
                            UUID = new Guid("07b08d2e-2ce8-44ff-9c74-15bf8ac0a7f3")
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entity = 12,
                            EntityId = 2,
                            Link = "https://imageio.forbes.com/specials-images/imageserve/5d35eacaf1176b0008974b54/2020-Chevrolet-Corvette-Stingray/0x0.jpg?format=jpg&crop=4560,2565,x790,y784,safe&width=960",
                            MediaGuid = new Guid("c9c9e611-dd23-4df6-90e0-992727ec3378"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 2,
                            Entity = 12,
                            EntityId = 3,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("69ca9243-c290-44ba-beb2-7863ad50407a"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 3,
                            Entity = 12,
                            EntityId = 4,
                            Link = "https://cdn.motor1.com/images/mgl/JO94P6/s1/most-expensive-cars-in-the-world.jpg",
                            MediaGuid = new Guid("01d07660-2dbe-40b3-93f9-7e9c3c23ba17"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 4,
                            Entity = 12,
                            EntityId = 5,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("01e24ffb-1197-457d-9ff9-9328dec6001f"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 5,
                            Entity = 14,
                            EntityId = 6,
                            Link = "https://i.abcnewsfe.com/a/aae2e440-73a2-4252-a4c9-c7d27f0efda7/mcdonalds-gty-thg-230728_1690559943139_hpMain.jpg",
                            MediaGuid = new Guid("603c8bc4-74a5-448f-95e8-b375c25d9526"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 6,
                            Entity = 14,
                            EntityId = 7,
                            Link = "https://www.allrecipes.com/thmb/3YpMeC2Za5PkXZFnlNFaBOCtC3c=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/mcdonalds-store-front-4x3-0a58d7e370ce48f7b050203fd478c407.png",
                            MediaGuid = new Guid("9d9015c5-325f-4c12-a0e5-e34c5119cef2"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 7,
                            Entity = 15,
                            EntityId = 8,
                            Link = "https://www.foodandwine.com/thmb/K_t1B_xBKIKYm_ZoNIEqaBvuXcQ=/1500x0/filters:no_upscale():max_bytes(150000):strip_icc()/Burger-King-Everything-Seasoned-Bun-FT-BLOG0922-c8c7859b9c794c42af7700b5b957a874.jpg",
                            MediaGuid = new Guid("4ef9b2b0-56c3-43fd-86ff-49265fc8a3e4"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 8,
                            Entity = 15,
                            EntityId = 9,
                            Link = "https://www.thestreet.com/.image/ar_16:9%2Cc_fill%2Ccs_srgb%2Cfl_progressive%2Cq_auto:good%2Cw_1200/MTg3NTA5NzAzMTQ2NzQzMzU2/burger-king-yeti-super-one-pound-beef-burger.jpg",
                            MediaGuid = new Guid("edb265b8-f5ed-41d8-800b-417341dcaa3e"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 9,
                            Entity = 1,
                            EntityId = 16,
                            Link = "https://media-cdn.tripadvisor.com/media/photo-s/11/70/80/ac/chciken.jpg",
                            MediaGuid = new Guid("91a0b79e-4972-4811-91ca-92d870b4cb9b"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 10,
                            Entity = 1,
                            EntityId = 17,
                            Link = "https://www.kimberley.co.za/wp-content/uploads/2022/01/38784_STEERS-AsPhande_Sharing_Meal_Promotion-20220113-KCP-SP-v1_00a.jpg",
                            MediaGuid = new Guid("bfdb92eb-e11b-4b96-a356-a8c835d8c4d9"),
                            MediaType = 0
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallengeId = new Guid("a3bb21c7-9ea2-4c9b-9811-e3526856d05b"),
                            Description = "School Post",
                            EntityId = 1,
                            Likes = 12,
                            Title = "Steer Burger"
                        },
                        new
                        {
                            Id = 2,
                            ChallengeId = new Guid("520a4d3a-e6ce-458c-8c72-360a5ffc92eb"),
                            Description = "Sport Cars",
                            EntityId = 12,
                            Likes = 20,
                            Title = "Ball for Soccer Peeps"
                        },
                        new
                        {
                            Id = 3,
                            ChallengeId = new Guid("162ff745-7807-4b06-8660-5c7cc89a392f"),
                            Description = "Everything we care about",
                            EntityId = 13,
                            Likes = 25,
                            Title = "Hello Wold"
                        },
                        new
                        {
                            Id = 4,
                            ChallengeId = new Guid("a3bb21c7-9ea2-4c9b-9811-e3526856d05b"),
                            Description = "Best McDonald picture",
                            EntityId = 14,
                            Likes = 12,
                            Title = "Mc Donalds"
                        },
                        new
                        {
                            Id = 5,
                            ChallengeId = new Guid("a3bb21c7-9ea2-4c9b-9811-e3526856d05b"),
                            Description = "King Burger Tastes really good",
                            EntityId = 15,
                            Likes = 150,
                            Title = "King Burger"
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressId")
                        .HasColumnType("integer");

                    b.Property<int>("ContactId")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
