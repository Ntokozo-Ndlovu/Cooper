// <auto-generated />
using System;
using Cooper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cooper.Data.Migrations
{
    [DbContext(typeof(CooperDbContext))]
    [Migration("20240128191622_AddChallengeIdOnPostTable")]
    partial class AddChallengeIdOnPostTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cooper.Data.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Challenge");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallengeGuid = new Guid("5922fe70-a2a2-4a9e-8e11-62b667f47bd4"),
                            Description = "Please take a good soccer photo",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 9,
                            Name = "Best Soccer Picture",
                            Price = 11f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ChallengeGuid = new Guid("d5c7d318-5c86-46b9-83f9-c1024333b35c"),
                            Description = "Please take a nice picture eating out",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 10,
                            Name = "Best Steers Picture",
                            Price = 12f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ChallengeGuid = new Guid("6b53be13-baaf-4910-9862-f38ed4363e0f"),
                            Description = "Please take a nice picture eating out",
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EntityId = 11,
                            Name = "Best Sunday Chill Picture",
                            Price = 13f,
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 7
                        },
                        new
                        {
                            Id = 2,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 8
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UUID = new Guid("219a4b5b-d75c-4046-b3dd-250708067a5c")
                        },
                        new
                        {
                            Id = 2,
                            UUID = new Guid("765666f9-8758-49bd-9b59-160c582b4351")
                        },
                        new
                        {
                            Id = 3,
                            UUID = new Guid("28d7dabb-84d2-4220-a6fa-4577bab5fadb")
                        },
                        new
                        {
                            Id = 4,
                            UUID = new Guid("3770bf8b-98f8-4eb9-b27c-0a3578e54b22")
                        },
                        new
                        {
                            Id = 5,
                            UUID = new Guid("24e9e74e-9855-4355-a6ea-2fc817fe6645")
                        },
                        new
                        {
                            Id = 6,
                            UUID = new Guid("60728cab-44fc-4af8-9699-5008d539a0c3")
                        },
                        new
                        {
                            Id = 7,
                            UUID = new Guid("06a187d1-f9f8-472f-910c-76e6cbed504b")
                        },
                        new
                        {
                            Id = 8,
                            UUID = new Guid("5d56f91a-f5a1-438d-af6f-c63298733d85")
                        },
                        new
                        {
                            Id = 9,
                            UUID = new Guid("ca93a189-053b-4126-90f1-841325f769e0")
                        },
                        new
                        {
                            Id = 10,
                            UUID = new Guid("96c4929b-56dc-44c6-b9dc-2a569d76147b")
                        },
                        new
                        {
                            Id = 11,
                            UUID = new Guid("d0de398c-92aa-428e-9aea-cd2154a92d01")
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entity = 1,
                            EntityId = 2,
                            Link = "https://imageio.forbes.com/specials-images/imageserve/5d35eacaf1176b0008974b54/2020-Chevrolet-Corvette-Stingray/0x0.jpg?format=jpg&crop=4560,2565,x790,y784,safe&width=960",
                            MediaGuid = new Guid("cfdf0669-da10-4566-8d29-e8751363ba5c"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 2,
                            Entity = 1,
                            EntityId = 3,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("fa35be62-d405-4f47-a791-81a64173214f"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 3,
                            Entity = 1,
                            EntityId = 4,
                            Link = "https://cdn.motor1.com/images/mgl/JO94P6/s1/most-expensive-cars-in-the-world.jpg",
                            MediaGuid = new Guid("5383c383-a48b-4aa6-8b83-2fc83259a40b"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 4,
                            Entity = 1,
                            EntityId = 5,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("5cacbebd-110b-4d25-941f-bdaf13872a20"),
                            MediaType = 0
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChallengeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "School Post",
                            EntityId = 1,
                            Likes = 12,
                            Title = "Hello Wold"
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Username", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
