// <auto-generated />
using System;
using Cooper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Cooper.Data.Migrations
{
    [DbContext(typeof(CooperDbContext))]
    [Migration("20240114180817_addEntityFieldToMediaAndComment")]
    partial class addEntityFieldToMediaAndComment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Cooper.Data.Entity.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Suburb")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Challenge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ChallengeGuid")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Challenge");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Comment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 7
                        },
                        new
                        {
                            Id = 2,
                            Body = "You are the best",
                            Entity = 1,
                            EntityId = 8
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("UUID")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UUID = new Guid("b1ae4bed-3058-41b2-97ef-eda07bbb3938")
                        },
                        new
                        {
                            Id = 2,
                            UUID = new Guid("8220b3da-d64c-46c6-8f97-78685f2a201f")
                        },
                        new
                        {
                            Id = 3,
                            UUID = new Guid("cd78e654-55a5-48a2-821a-7fa6c99d0b77")
                        },
                        new
                        {
                            Id = 4,
                            UUID = new Guid("7521efa1-ed0e-4f55-bd9c-b00c66ba7bbd")
                        },
                        new
                        {
                            Id = 5,
                            UUID = new Guid("fc608335-ba0d-4e14-99fa-b64e86bbb2b0")
                        },
                        new
                        {
                            Id = 6,
                            UUID = new Guid("9b4fc516-3760-4d01-b68e-d743ca4bdd20")
                        },
                        new
                        {
                            Id = 7,
                            UUID = new Guid("7a37f7fb-2a68-4ec1-a5ab-524fb277e2c4")
                        },
                        new
                        {
                            Id = 8,
                            UUID = new Guid("0356e095-a5b7-42b6-868f-68096bd333b4")
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Entity")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("MediaGuid")
                        .HasColumnType("uuid");

                    b.Property<int>("MediaType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Media");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Entity = 1,
                            EntityId = 2,
                            Link = "https://imageio.forbes.com/specials-images/imageserve/5d35eacaf1176b0008974b54/2020-Chevrolet-Corvette-Stingray/0x0.jpg?format=jpg&crop=4560,2565,x790,y784,safe&width=960",
                            MediaGuid = new Guid("3a357933-53bc-4216-a0a2-33c814bc4e87"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 2,
                            Entity = 1,
                            EntityId = 3,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("3fa8d526-d192-41e5-968f-f66ff91f814d"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 3,
                            Entity = 1,
                            EntityId = 4,
                            Link = "https://cdn.motor1.com/images/mgl/JO94P6/s1/most-expensive-cars-in-the-world.jpg",
                            MediaGuid = new Guid("3236a54a-dbe8-4c96-9f10-e7c62c101efb"),
                            MediaType = 0
                        },
                        new
                        {
                            Id = 4,
                            Entity = 1,
                            EntityId = 5,
                            Link = "https://carwow-uk-wp-3.imgix.net/18015-MC20BluInfinito-scaled-e1666008987698.jpg",
                            MediaGuid = new Guid("c6a138a4-b2cb-4253-8f62-cc4f7783e590"),
                            MediaType = 0
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Cooper.Data.Entity.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Post");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "School Post",
                            EntityId = 1,
                            Likes = 12
                        });
                });

            modelBuilder.Entity("Cooper.Data.Entity.Username", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EntityId")
                        .HasColumnType("integer");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasAlternateKey("EntityId");

                    b.ToTable("Username");
                });
#pragma warning restore 612, 618
        }
    }
}
